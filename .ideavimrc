set scrolloff=5
set relativenumber
set idearefactormode=keep
set timeoutlen=800 " time to wait for a mapped sequence to complete (in milliseconds)

"" remap leader to space
let mapleader = " "

""" Editing and Reloading the Config
set clipboard+=unnamed
set clipboard+=ideaput
nnoremap \e :e ~/.ideavimrc<CR>
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq

"" -- navigation
nnoremap <c-\> :action SplitVertically<CR>
nnoremap <c--> :action SplitHorizontally<CR>
nnoremap <c-m> :action MoveEditorToOppositeGroup<CR>

"" movements
sethandler <c-j> a:vim
sethandler <c-k> a:vim
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l

"" close current content
nnoremap ;q :action CloseContent<CR>
"" Open current editor in new window
nnoremap <leader>en :action EditSourceInNewWindow<CR>
"" Move between windows
nnoremap <leader>nw :action NextWindow<CR>

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins
set which-key

""" Surround Plugin  --------------------------------
" Emulates vim-surround. Mappings to easily delete, change and add such surroundings in pairs
" Basic Commands:
"   cs   Change surroundings
"   cst  Change surroundings tag
"   ds   Delete surroundings
"   dst  Delete surroundings tag
"   ys   Surround text object
" See https://github.com/tpope/vim-surround/blob/master/doc/surround.txt for details
Plug 'tpope/vim-surround'
set surround

""" multiple-cursors plugin  --------------------------------
" Emulates vim-multiple-cursors
" Basic Commands:
"   <C-n> start multicursor
"   <C-n> next match
"   <C-x> skip next match
"   <C-p> remove current match and go back to previous one
" See https://github.com/terryma/vim-multiple-cursors for details
set multiple-cursors
map mc <A-n> " start multicursor
map mx <A-x> " skip next match
map mp <A-p> " remove current match and go back to previous one

""" NERDTree plugin  --------------------------------
" Emulates NERDTree
" Basic Commands:
"   <leader>e  Open NERDTree (mapped bellow)
"   <leader>ee Toggle NERDTree (mapped bellow)
"   q	    Close the NERDTree windowe
"   o   	Open files, directories and bookmarks
"   go   	Open selected file, but leave cursor in the NERDTree
"   i   	Open selected file in a split window
"   gi   	Same as i, but leave the cursor on the NERDTree
"   s   	Open selected file in a new vsplit
"   gs   	Same as s, but leave the cursor on the NERDTree
"   <C-J>	Jump down to next sibling of the current directory
"   <C-K>	Jump up to previous sibling of the current directory
"   R	    Recursively refresh the current root
"   m	    Display the NERDTree menu
" See  https://github.com/JetBrains/ideavim/wiki/NERDTree-support for details
Plug 'preservim/nerdtree'
set NERDTree
map <leader>ee :NERDTree<CR>
map <leader>et :NERDTreeToggle<CR>

Plug 'easymotion/vim-easymotion'
map <leader>J <Plug>(easymotion-s)
map <leader>j <Plug>(easymotion-f)

" Highlight copied text
Plug 'machakann/vim-highlightedyank'

" Commentary plugin
Plug 'tpope/vim-commentary'

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t


"" exit normal mode with jk
imap jk <Esc>

"" zen mode
map <leader>z <Action>(ToggleDistractionFreeMode)

"" open terminal
map <leader>t <Action>(ActivateTerminalToolWindow)
"" open new terminal in current directory
map <leader>nt <Action>(Terminal.OpenInTerminal)
"" rerun
map <leader>rr <Action>(Rerun)<CR>
"" run
map <leader>rc <Action>(Run)<CR>

"" g + i to see definitions like F1
map gi <Action>(QuickJavaDoc)

"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)


